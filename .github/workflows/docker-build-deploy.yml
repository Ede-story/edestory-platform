name: Docker Build & Deploy

on:
  push:
    branches:
      - main
    paths:
      - 'master-store/**'
      - 'corporate-site/**'
      - '.github/workflows/docker-build-deploy.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'master-store/**'
      - 'corporate-site/**'
  workflow_dispatch:
    inputs:
      service:
        description: 'Service to deploy'
        required: true
        type: choice
        options:
          - shop
          - corporate
          - both

env:
  GCP_PROJECT: 'rosy-stronghold-467817-k6'
  GCP_REGION: 'us-central1'
  REGISTRY: 'gcr.io'

jobs:
  detect-changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      shop: ${{ steps.changes.outputs.shop }}
      corporate: ${{ steps.changes.outputs.corporate }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Check for changes
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            shop:
              - 'master-store/**'
            corporate:
              - 'corporate-site/**'

  build-shop:
    name: Build Shop Docker Image
    needs: detect-changes
    if: needs.detect-changes.outputs.shop == 'true' || github.event.inputs.service == 'shop' || github.event.inputs.service == 'both'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      
      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
      
      - name: Configure Docker for GCR
        run: gcloud auth configure-docker
      
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./master-store
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.GCP_PROJECT }}/edestory-shop:latest
            ${{ env.REGISTRY }}/${{ env.GCP_PROJECT }}/edestory-shop:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            NODE_ENV=production
      
      - name: Deploy to Cloud Run
        if: github.ref == 'refs/heads/main'
        run: |
          gcloud run deploy edestory-shop-prod \
            --image ${{ env.REGISTRY }}/${{ env.GCP_PROJECT }}/edestory-shop:${{ github.sha }} \
            --region ${{ env.GCP_REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --set-env-vars NODE_ENV=production

  build-corporate:
    name: Build Corporate Docker Image
    needs: detect-changes
    if: needs.detect-changes.outputs.corporate == 'true' || github.event.inputs.service == 'corporate' || github.event.inputs.service == 'both'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      
      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
      
      - name: Configure Docker for GCR
        run: gcloud auth configure-docker
      
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./corporate-site
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.GCP_PROJECT }}/edestory-corp:latest
            ${{ env.REGISTRY }}/${{ env.GCP_PROJECT }}/edestory-corp:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            NODE_ENV=production
      
      - name: Deploy to Cloud Run
        if: github.ref == 'refs/heads/main'
        run: |
          gcloud run deploy edestory-corp-prod \
            --image ${{ env.REGISTRY }}/${{ env.GCP_PROJECT }}/edestory-corp:${{ github.sha }} \
            --region ${{ env.GCP_REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --set-env-vars NODE_ENV=production

  smoke-tests:
    name: Smoke Tests
    needs: [build-shop, build-corporate]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Run Smoke Tests
        run: |
          # Test Shop
          curl -f https://shop.ede-story.com || exit 1
          
          # Test Corporate
          curl -f https://www.ede-story.com || exit 1
          
          echo "âœ… All smoke tests passed!"