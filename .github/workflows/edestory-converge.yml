name: EDEstory Converge (Cloud Build → Cloud Run → save URL/log)

on:
  push:
    branches: [ main ]
    paths: [ ".github/workflows/edestory-converge.yml" ]
  workflow_dispatch: {}

permissions:
  contents: write
  pull-requests: write
  actions: write
  checks: write
  issues: write
  id-token: write

jobs:
  converge:
    runs-on: ubuntu-latest
    env:
      GH_PAT: ${{ secrets.GH_PAT }}                 # classic PAT (scopes: repo, workflow)
      GCP_PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
      WIF_PROVIDER:   ${{ vars.WIF_PROVIDER }}
      GCP_SA_EMAIL:   ${{ vars.GCP_SA_EMAIL }}
      REGION: europe-west1
      AR_REPO: diary-registry
      SERVICE: diary-api-preview
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Init log & git auth for pushing results
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p ops/supervisor
          LOG="ops/supervisor/last_run.log"
          echo "=== Converge $(date -u +%FT%TZ) ===" | tee "$LOG"
          echo "repo=$GITHUB_REPOSITORY sha=$GITHUB_SHA" | tee -a "$LOG"
          if [ -n "${GH_PAT:-}" ]; then
            git config user.name  "edestory-orchestrator[bot]"
            git config user.email "edestory-orchestrator[bot]@users.noreply.github.com"
            git remote set-url origin "https://x-access-token:${GH_PAT}@github.com/${GITHUB_REPOSITORY}.git"
            echo "git push via GH_PAT enabled" | tee -a "$LOG"
          else
            echo "::warning::GH_PAT not set; will try GITHUB_TOKEN" | tee -a "$LOG"
          fi

      - name: Auth to Google Cloud (WIF)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ env.WIF_PROVIDER }}
          service_account: ${{ env.GCP_SA_EMAIL }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Build image with Cloud Build
        shell: bash
        run: |
          set -euo pipefail
          LOG="ops/supervisor/last_run.log"
          {
            IMAGE="${REGION}-docker.pkg.dev/${GCP_PROJECT_ID}/${AR_REPO}/diary-api:converge-${GITHUB_RUN_NUMBER}"
            echo "Building ${IMAGE} from apps/api …"
            gcloud builds submit apps/api --tag "${IMAGE}"
            echo "Build done: ${IMAGE}"
          } 2>&1 | tee -a "$LOG"

      - name: Deploy Cloud Run with built image
        shell: bash
        run: |
          set -euo pipefail
          LOG="ops/supervisor/last_run.log"
          {
            IMAGE="${REGION}-docker.pkg.dev/${GCP_PROJECT_ID}/${AR_REPO}/diary-api:converge-${GITHUB_RUN_NUMBER}"
            echo "Deploying ${SERVICE} using ${IMAGE} …"
            gcloud config set run/region "${REGION}" >/dev/null
            gcloud run deploy "${SERVICE}" \
              --image "${IMAGE}" \
              --allow-unauthenticated \
              --quiet \
              --update-env-vars PORT=8080 \
              --set-secrets DIARY_TOKEN=projects/${GCP_PROJECT_ID}/secrets/preview-DIARY_TOKEN:latest \
              --set-secrets DATABASE_URL=projects/${GCP_PROJECT_ID}/secrets/preview-DATABASE_URL:latest
            URL="$(gcloud run services describe "${SERVICE}" --format='value(status.url)')"
            echo "$URL" | tee cloud_run_url.txt
            echo "$URL" > ops/supervisor/cloud_run_url.txt
            printf '{"cloud_run_url":"%s","ts":"%s"}\n' "$URL" "$(date -u +%FT%TZ)" > ops/supervisor/last_run.json
            echo "Cloud Run URL: $URL"
          } 2>&1 | tee -a "$LOG"

      - name: Push log & outputs to repo (always)
        if: always()
        shell: bash
        run: |
          set -euo pipefail
          git add ops/supervisor/last_run.log ops/supervisor/last_run.json || true
          [ -f ops/supervisor/cloud_run_url.txt ] && git add ops/supervisor/cloud_run_url.txt || true
          git commit -m "ops(converge): save log/outputs" || true
          git push origin HEAD:${GITHUB_REF_NAME} || true
          # kick
          





