name: Supervisor Fallback (Cloud Run → Report via commit)

on:
  push:
    branches: [ main ]
    paths: [ ".github/workflows/edestory-supervisor-fallback.yml" ]
  workflow_dispatch: {}

permissions:
  contents: write
  pull-requests: write
  actions: write
  checks: write
  issues: write
  id-token: write

jobs:
  deploy_and_report:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create GitHub App token
        id: app
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}
          installation-id: ${{ vars.GH_INSTALLATION_ID }}

      - name: Auth to Google Cloud (WIF)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ vars.WIF_PROVIDER }}
          service_account: ${{ vars.GCP_SA_EMAIL }}
          create_credentials_file: true

      - name: Setup gcloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: ">= 453.0.0"

      - name: Deploy Cloud Run (source: apps/api)
        working-directory: apps/api
        env:
          PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
        run: |
          set -euxo pipefail
          REGION="europe-west1"
          SERVICE="diary-api-preview"
          gcloud config set project "$PROJECT_ID"
          gcloud config set run/region "$REGION"
          # deploy from source (Cloud Build)
          gcloud run deploy "$SERVICE" \
            --source . \
            --allow-unauthenticated \
            --quiet \
            --update-env-vars "PORT=8080" \
            --set-secrets "DIARY_TOKEN=projects/${PROJECT_ID}/secrets/preview-DIARY_TOKEN:latest" \
            --set-secrets "DATABASE_URL=projects/${PROJECT_ID}/secrets/preview-DATABASE_URL:latest"
          URL="$(gcloud run services describe "$SERVICE" --format='value(status.url)')"
          echo "$URL" > "$GITHUB_WORKSPACE/cloud_run_url.txt"

      - name: Save outputs into repo (commit files)
        env:
          GH_TOKEN: ${{ steps.app.outputs.token }}
        run: |
          set -e
          mkdir -p ops/supervisor
          cp cloud_run_url.txt ops/supervisor/cloud_run_url.txt
          printf '{"cloud_run_url":"%s","ts":"%s"}\n' "$(cat cloud_run_url.txt)" "$(date -u +%FT%TZ)" > ops/supervisor/last_run.json

          git config user.name "edestory-orchestrator[bot]"
          git config user.email "edestory-orchestrator[bot]@users.noreply.github.com"
          git add ops/supervisor/cloud_run_url.txt ops/supervisor/last_run.json
          git commit -m "ops(supervisor): write outputs (cloud_run_url)" || true
          # push via App token
          git remote set-url origin "https://x-access-token:${GH_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
          git push origin HEAD:${GITHUB_REF_NAME}

      - name: Update Vercel env (optional, preview)
        if: ${{ secrets.VERCEL_TOKEN != '' && vars.VERCEL_PROJECT != '' }}
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT: ${{ vars.VERCEL_PROJECT }}
          VERCEL_TEAM_ID: ${{ vars.VERCEL_TEAM_ID }}
        run: |
          set -e
          URL="$(cat cloud_run_url.txt)"
          API="https://api.vercel.com/v10/projects/${VERCEL_PROJECT}/env"
          TEAM="${VERCEL_TEAM_ID:+?teamId=${VERCEL_TEAM_ID}}"
          # try create
          curl -fsS -X POST "${API}${TEAM}" \
            -H "Authorization: Bearer ${VERCEL_TOKEN}" \
            -H "Content-Type: application/json" \
            -d "{\"key\":\"NEXT_PUBLIC_API_BASE_URL\",\"value\":\"${URL}\",\"target\":[\"preview\"]}" || true
          echo "Vercel env attempted (preview)."

      - name: Comment in PR #9 (best effort)
        env:
          GH_TOKEN: ${{ steps.app.outputs.token }}
        run: |
          set -e
          URL="$(cat cloud_run_url.txt)"
          gh api repos/${{ github.repository }}/issues/9/comments \
            -f body="✅ Cloud Run URL: ${URL}\nSaved in ops/supervisor/cloud_run_url.txt" || true

