name: EDEstory Supervisor (Cloud Run → Vercel → Checks)

on:
  push:
    branches: [ main ]
    paths: [ ".github/workflows/edestory-supervisor.yml" ]   # автозапуск по push самого файла
  workflow_dispatch:
    inputs:
      pr_number:
        description: "Target PR number (e.g., 3)"
        default: "3"
        required: true

permissions:
  contents: write
  actions: write
  pull-requests: write
  id-token: write

concurrency:
  group: "edestory-supervisor"
  cancel-in-progress: true

env:
  GCP_PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
  REGION: europe-west1
  SERVICE_NAME: diary-api-preview
  VERCEL_PROJECT: ${{ vars.VERCEL_PROJECT }}
  VERCEL_TEAM_ID: ${{ vars.VERCEL_TEAM_ID }}

jobs:
  supervise:
    if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Resolve PR number
        id: pr
        run: echo "num=${{ inputs.pr_number || '3' }}" >> $GITHUB_OUTPUT

      - name: App token (PR comment)
        id: app
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}
          installation-id: ${{ vars.GH_INSTALLATION_ID }}

      - name: Auth to GCP (WIF)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ vars.WIF_PROVIDER }}
          service_account: ${{ vars.GCP_SA_EMAIL }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Ensure Artifact Registry
        run: |
          gcloud artifacts repositories describe diary-registry --location=${{ env.REGION }} >/dev/null 2>&1 || \
            gcloud artifacts repositories create diary-registry --repository-format=DOCKER --location=${{ env.REGION }}

      - name: Build & Push (Cloud Build)
        run: |
          IMAGE="europe-west1-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/diary-registry/diary-api:main-${{ github.run_number }}"
          gcloud builds submit apps/api --tag "$IMAGE"
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

      - name: Deploy to Cloud Run (preview)
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image "$IMAGE" \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --set-secrets DIARY_TOKEN=preview-DIARY_TOKEN:latest,DATABASE_URL=preview-DATABASE_URL:latest

      - name: Capture CLOUD_RUN_URL
        id: cr
        run: |
          URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} --region ${{ env.REGION }} --format='value(status.url)')
          echo "url=$URL" >> $GITHUB_OUTPUT
          echo "$URL" > cloud_run_url.txt
      - uses: actions/upload-artifact@v4
        with:
          name: cloud_run_url
          path: cloud_run_url.txt

      - name: Update Vercel env (preview)
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT: ${{ env.VERCEL_PROJECT }}
          VERCEL_TEAM_ID: ${{ env.VERCEL_TEAM_ID }}
          API_URL: ${{ steps.cr.outputs.url }}
        run: |
          BASE="https://api.vercel.com"; TEAM_QS=""; [ -n "$VERCEL_TEAM_ID" ] && TEAM_QS="?teamId=$VERCEL_TEAM_ID"
          curl -fsS -X POST "$BASE/v10/projects/${VERCEL_PROJECT}/env$TEAM_QS" \
            -H "Authorization: Bearer $VERCEL_TOKEN" -H "Content-Type: application/json" \
            -d "{\"key\":\"NEXT_PUBLIC_API_BASE_URL\",\"value\":\"$API_URL\",\"type\":\"plain\",\"target\":[\"preview\"],\"overwrite\":true}" \
            || echo "env unchanged"

      - name: Comment to PR (summary)
        env:
          GH_TOKEN: ${{ steps.app.outputs.token }}
        run: |
          PR=${{ steps.pr.outputs.num }}
          CR_URL="${{ steps.cr.outputs.url }}"
          BODY="✅ Supervisor run.\n• Cloud Run: **${CR_URL}**"
          gh api repos/${{ github.repository }}/issues/$PR/comments -f body="$BODY"
