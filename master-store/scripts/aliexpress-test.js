#!/usr/bin/env node

/**
 * AliExpress Affiliate API Test Script
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å API –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–ª—é—á–µ–π
 */

const crypto = require('crypto');
const https = require('https');
const readline = require('readline');

// –¶–≤–µ—Ç–∞ –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏
const colors = {
  reset: '\x1b[0m',
  green: '\x1b[32m',
  red: '\x1b[31m',
  yellow: '\x1b[33m',
  blue: '\x1b[34m',
  cyan: '\x1b[36m'
};

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –≤–≤–æ–¥–∞
const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const question = (query) => new Promise(resolve => rl.question(query, resolve));

class AliExpressAPI {
  constructor(appKey, appSecret) {
    this.appKey = appKey;
    this.appSecret = appSecret;
    this.apiUrl = 'api-sg.aliexpress.com';
  }

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ–¥–ø–∏—Å–∏
  generateSign(params) {
    const sortedParams = Object.keys(params)
      .sort()
      .map(key => `${key}${params[key]}`)
      .join('');
    
    const signStr = this.appSecret + sortedParams + this.appSecret;
    return crypto.createHash('md5').update(signStr).digest('hex').toUpperCase();
  }

  // –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ API –∑–∞–ø—Ä–æ—Å–∞
  async makeRequest(method, params = {}) {
    const timestamp = new Date().toISOString();
    
    const requestParams = {
      app_key: this.appKey,
      method,
      timestamp,
      sign_method: 'md5',
      v: '2.0',
      format: 'json',
      ...params
    };

    requestParams.sign = this.generateSign(requestParams);

    const queryString = new URLSearchParams(requestParams).toString();
    
    return new Promise((resolve, reject) => {
      const options = {
        hostname: this.apiUrl,
        path: `/sync?${queryString}`,
        method: 'POST',
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded'
        }
      };

      const req = https.request(options, (res) => {
        let data = '';
        res.on('data', chunk => data += chunk);
        res.on('end', () => {
          try {
            const json = JSON.parse(data);
            if (json.error_response) {
              reject(new Error(json.error_response.msg || 'API Error'));
            } else {
              resolve(json);
            }
          } catch (e) {
            reject(e);
          }
        });
      });

      req.on('error', reject);
      req.end();
    });
  }

  // –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
  async testGetCategories() {
    console.log(`\n${colors.cyan}üìÇ –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π...${colors.reset}`);
    try {
      const response = await this.makeRequest('aliexpress.affiliate.category.get');
      const categories = response.aliexpress_affiliate_category_get_response?.resp_result?.result?.categories;
      
      if (categories && categories.length > 0) {
        console.log(`${colors.green}‚úÖ –£—Å–ø–µ—à–Ω–æ! –ù–∞–π–¥–µ–Ω–æ ${categories.length} –∫–∞—Ç–µ–≥–æ—Ä–∏–π${colors.reset}`);
        console.log(`–ü—Ä–∏–º–µ—Ä—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π:`);
        categories.slice(0, 5).forEach(cat => {
          console.log(`  - ${cat.category_name} (ID: ${cat.category_id})`);
        });
        return true;
      }
    } catch (error) {
      console.log(`${colors.red}‚ùå –û—à–∏–±–∫–∞: ${error.message}${colors.reset}`);
      return false;
    }
  }

  // –¢–µ—Å—Ç 2: –ü–æ–∏—Å–∫ –≥–æ—Ä—è—á–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤
  async testHotProducts() {
    console.log(`\n${colors.cyan}üî• –¢–µ—Å—Ç 2: –ü–æ–∏—Å–∫ –≥–æ—Ä—è—á–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤...${colors.reset}`);
    try {
      const response = await this.makeRequest('aliexpress.affiliate.hotproduct.query', {
        target_currency: 'EUR',
        target_language: 'ES',
        ship_to_country: 'ES',
        page_size: 10
      });
      
      const products = response.aliexpress_affiliate_hotproduct_query_response?.resp_result?.result?.products;
      
      if (products && products.length > 0) {
        console.log(`${colors.green}‚úÖ –£—Å–ø–µ—à–Ω–æ! –ù–∞–π–¥–µ–Ω–æ ${products.length} –≥–æ—Ä—è—á–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤${colors.reset}`);
        console.log(`–ü—Ä–∏–º–µ—Ä—ã —Ç–æ–≤–∞—Ä–æ–≤:`);
        products.slice(0, 3).forEach(product => {
          console.log(`  - ${product.product_title.substring(0, 50)}...`);
          console.log(`    –¶–µ–Ω–∞: ‚Ç¨${product.target_sale_price} | –ö–æ–º–∏—Å—Å–∏—è: ${product.commission_rate}%`);
        });
        return true;
      }
    } catch (error) {
      console.log(`${colors.red}‚ùå –û—à–∏–±–∫–∞: ${error.message}${colors.reset}`);
      return false;
    }
  }

  // –¢–µ—Å—Ç 3: –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
  async testProductSearch(keywords = 'phone case') {
    console.log(`\n${colors.cyan}üîç –¢–µ—Å—Ç 3: –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –∑–∞–ø—Ä–æ—Å—É "${keywords}"...${colors.reset}`);
    try {
      const response = await this.makeRequest('aliexpress.affiliate.product.query', {
        keywords: keywords,
        target_currency: 'EUR',
        target_language: 'ES',
        ship_to_country: 'ES',
        page_size: 5
      });
      
      const products = response.aliexpress_affiliate_product_query_response?.resp_result?.result?.products;
      
      if (products && products.length > 0) {
        console.log(`${colors.green}‚úÖ –£—Å–ø–µ—à–Ω–æ! –ù–∞–π–¥–µ–Ω–æ ${products.length} —Ç–æ–≤–∞—Ä–æ–≤${colors.reset}`);
        products.forEach(product => {
          const profit = (product.target_sale_price * 0.3).toFixed(2); // 30% –Ω–∞—Ü–µ–Ω–∫–∞
          const commission = (product.target_sale_price * product.commission_rate / 100).toFixed(2);
          console.log(`\n  üì¶ ${product.product_title.substring(0, 60)}...`);
          console.log(`     üí∞ –¶–µ–Ω–∞: ‚Ç¨${product.target_sale_price}`);
          console.log(`     üìà –ù–∞—à–∞ —Ü–µ–Ω–∞ (—Å –Ω–∞—Ü–µ–Ω–∫–æ–π 30%): ‚Ç¨${(product.target_sale_price * 1.3).toFixed(2)}`);
          console.log(`     üíµ –ö–æ–º–∏—Å—Å–∏—è AliExpress: ‚Ç¨${commission} (${product.commission_rate}%)`);
          console.log(`     ‚ú® –ß–∏—Å—Ç–∞—è –ø—Ä–∏–±—ã–ª—å: ‚Ç¨${(parseFloat(profit) + parseFloat(commission)).toFixed(2)}`);
        });
        return true;
      }
    } catch (error) {
      console.log(`${colors.red}‚ùå –û—à–∏–±–∫–∞: ${error.message}${colors.reset}`);
      return false;
    }
  }

  // –¢–µ—Å—Ç 4: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–æ–π —Å—Å—ã–ª–∫–∏
  async testGenerateLink() {
    console.log(`\n${colors.cyan}üîó –¢–µ—Å—Ç 4: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–æ–π —Å—Å—ã–ª–∫–∏...${colors.reset}`);
    try {
      const testUrl = 'https://www.aliexpress.com/item/1005001.html';
      const response = await this.makeRequest('aliexpress.affiliate.link.generate', {
        source_values: testUrl,
        promotion_link_type: '2'
      });
      
      const links = response.aliexpress_affiliate_link_generate_response?.resp_result?.result?.promotion_links;
      
      if (links && links.length > 0) {
        console.log(`${colors.green}‚úÖ –£—Å–ø–µ—à–Ω–æ! –ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è —Å—Å—ã–ª–∫–∞ —Å–æ–∑–¥–∞–Ω–∞${colors.reset}`);
        console.log(`  üîó ${links[0].promotion_link}`);
        return true;
      }
    } catch (error) {
      console.log(`${colors.red}‚ùå –û—à–∏–±–∫–∞: ${error.message}${colors.reset}`);
      return false;
    }
  }
}

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
  console.clear();
  console.log(`${colors.blue}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${colors.reset}`);
  console.log(`${colors.blue}‚ïë   ${colors.green}üöÄ AliExpress Affiliate API –¢–µ—Å—Ç–µ—Ä${colors.blue}                 ‚ïë${colors.reset}`);
  console.log(`${colors.blue}‚ïë   ${colors.yellow}–î–ª—è Edestory Shop - shop.ede-story.com${colors.blue}            ‚ïë${colors.reset}`);
  console.log(`${colors.blue}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${colors.reset}\n`);

  console.log(`${colors.yellow}üìù –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–∏ API –∫–ª—é—á–∏ –∏–∑ AliExpress Affiliate Portal:${colors.reset}`);
  console.log(`${colors.cyan}(–ü–æ–ª—É—á–∏—Ç—å –Ω–∞: https://portals.aliexpress.com/affiportals/web/appManage.htm)${colors.reset}\n`);

  const appKey = await question(`App Key: `);
  const appSecret = await question(`App Secret: `);

  if (!appKey || !appSecret) {
    console.log(`${colors.red}\n‚ùå –ö–ª—é—á–∏ –Ω–µ –≤–≤–µ–¥–µ–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º...${colors.reset}`);
    console.log(`${colors.yellow}‚ö†Ô∏è  –î–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –∫–ª—é—á–∏${colors.reset}`);
    rl.close();
    return;
  }

  console.log(`\n${colors.green}‚úÖ –ö–ª—é—á–∏ –ø–æ–ª—É—á–µ–Ω—ã. –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ...${colors.reset}`);

  const api = new AliExpressAPI(appKey.trim(), appSecret.trim());
  
  // –í—ã–ø–æ–ª–Ω—è–µ–º –≤—Å–µ —Ç–µ—Å—Ç—ã
  const results = [];
  results.push(await api.testGetCategories());
  results.push(await api.testHotProducts());
  results.push(await api.testProductSearch('smartphone'));
  results.push(await api.testGenerateLink());

  // –ò—Ç–æ–≥–∏
  console.log(`\n${colors.blue}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${colors.reset}`);
  console.log(`${colors.green}üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:${colors.reset}`);
  
  const successCount = results.filter(r => r).length;
  const totalCount = results.length;
  
  if (successCount === totalCount) {
    console.log(`${colors.green}üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ! (${successCount}/${totalCount})${colors.reset}`);
    console.log(`\n${colors.cyan}‚úÖ API –∫–ª—é—á–∏ —Ä–∞–±–æ—á–∏–µ –∏ –≥–æ—Ç–æ–≤—ã –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!${colors.reset}`);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–ª—é—á–∏ –≤ .env
    console.log(`\n${colors.yellow}üíæ –°–æ—Ö—Ä–∞–Ω—è—é –∫–ª—é—á–∏ –≤ .env.local...${colors.reset}`);
    
    const fs = require('fs');
    const path = require('path');
    const envPath = path.join(__dirname, '..', 'frontend', '.env.local');
    
    // –ß–∏—Ç–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π .env.local
    let envContent = fs.readFileSync(envPath, 'utf8');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–ª—é—á–∏
    envContent = envContent.replace(/ALIEXPRESS_APP_KEY=.*/, `ALIEXPRESS_APP_KEY=${appKey}`);
    envContent = envContent.replace(/ALIEXPRESS_APP_SECRET=.*/, `ALIEXPRESS_APP_SECRET=${appSecret}`);
    
    fs.writeFileSync(envPath, envContent);
    console.log(`${colors.green}‚úÖ –ö–ª—é—á–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ frontend/.env.local${colors.reset}`);
    
    console.log(`\n${colors.green}üöÄ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:${colors.reset}`);
    console.log(`1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –∏–º–ø–æ—Ä—Ç —Ç–æ–≤–∞—Ä–æ–≤: ${colors.cyan}npm run import:products${colors.reset}`);
    console.log(`2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –≤ Saleor: ${colors.cyan}http://localhost:8000/dashboard/${colors.reset}`);
    console.log(`3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ n8n –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏: ${colors.cyan}http://localhost:5678${colors.reset}`);
  } else {
    console.log(`${colors.red}‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏ (${successCount}/${totalCount})${colors.reset}`);
    console.log(`${colors.yellow}–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å API –∫–ª—é—á–µ–π –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞${colors.reset}`);
  }

  console.log(`\n${colors.blue}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${colors.reset}`);
  
  // –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø—Ä–æ Tracking ID
  const trackingId = await question(`\n${colors.yellow}–í–≤–µ–¥–∏—Ç–µ Tracking ID (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –Ω–∞–∂–º–∏—Ç–µ Enter —á—Ç–æ–±—ã –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å): ${colors.reset}`);
  
  if (trackingId) {
    const envPath = path.join(__dirname, '..', 'frontend', '.env.local');
    let envContent = fs.readFileSync(envPath, 'utf8');
    envContent = envContent.replace(/ALIEXPRESS_TRACKING_ID=.*/, `ALIEXPRESS_TRACKING_ID=${trackingId}`);
    fs.writeFileSync(envPath, envContent);
    console.log(`${colors.green}‚úÖ Tracking ID —Å–æ—Ö—Ä–∞–Ω–µ–Ω${colors.reset}`);
  }

  rl.close();
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
process.on('unhandledRejection', (err) => {
  console.error(`${colors.red}‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${err.message}${colors.reset}`);
  process.exit(1);
});

// –ó–∞–ø—É—Å–∫
main().catch(err => {
  console.error(`${colors.red}‚ùå –û—à–∏–±–∫–∞: ${err.message}${colors.reset}`);
  process.exit(1);
});