#!/bin/bash

# n8n Control Script for Ede Story Platform
# –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ n8n —Å–µ—Ä–≤–µ—Ä–æ–º

set -e

COMPOSE_FILE="docker-compose.n8n.yml"
N8N_URL="http://localhost:5678"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

function print_header() {
    echo -e "\n${GREEN}===========================================\${NC}"
    echo -e "${GREEN}       n8n Control Panel - Ede Story      ${NC}"
    echo -e "${GREEN}===========================================${NC}\n"
}

function status() {
    echo -e "${YELLOW}üìä –°—Ç–∞—Ç—É—Å n8n:${NC}"
    docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}" | grep n8n || echo "n8n –Ω–µ –∑–∞–ø—É—â–µ–Ω"
}

function start() {
    echo -e "${GREEN}üöÄ –ó–∞–ø—É—Å–∫ n8n...${NC}"
    docker-compose -f $COMPOSE_FILE up -d
    echo -e "${GREEN}‚úÖ n8n –∑–∞–ø—É—â–µ–Ω!${NC}"
    echo -e "${GREEN}üìç URL: ${N8N_URL}${NC}"
    echo -e "${GREEN}üë§ Login: admin${NC}"
    echo -e "${GREEN}üîë Password: edestory2025${NC}"
}

function stop() {
    echo -e "${YELLOW}‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ n8n...${NC}"
    docker-compose -f $COMPOSE_FILE stop
    echo -e "${GREEN}‚úÖ n8n –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
}

function restart() {
    echo -e "${YELLOW}üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ n8n...${NC}"
    docker-compose -f $COMPOSE_FILE restart
    echo -e "${GREEN}‚úÖ n8n –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω${NC}"
}

function logs() {
    echo -e "${YELLOW}üìú –õ–æ–≥–∏ n8n (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞):${NC}"
    docker-compose -f $COMPOSE_FILE logs -f
}

function backup() {
    BACKUP_DIR="n8n-backups/$(date +%Y%m%d_%H%M%S)"
    mkdir -p $BACKUP_DIR
    
    echo -e "${YELLOW}üíæ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞...${NC}"
    
    # –ë—ç–∫–∞–ø PostgreSQL
    docker exec edestory-n8n-postgres pg_dump -U n8n n8n > "$BACKUP_DIR/database.sql"
    
    # –ë—ç–∫–∞–ø workflows
    cp -r n8n-data "$BACKUP_DIR/n8n-data"
    cp -r n8n-workflows "$BACKUP_DIR/n8n-workflows"
    
    echo -e "${GREEN}‚úÖ –ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω –≤: $BACKUP_DIR${NC}"
}

function reset() {
    echo -e "${RED}‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ —É–¥–∞–ª–∏—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ n8n!${NC}"
    read -p "–í—ã —É–≤–µ—Ä–µ–Ω—ã? (yes/no): " confirm
    
    if [ "$confirm" = "yes" ]; then
        echo -e "${YELLOW}üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö...${NC}"
        docker-compose -f $COMPOSE_FILE down -v
        rm -rf n8n-data n8n-postgres-data
        mkdir -p n8n-data n8n-postgres-data
        echo -e "${GREEN}‚úÖ –î–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã. –ó–∞–ø—É—Å—Ç–∏—Ç–µ 'start' –¥–ª—è —á–∏—Å—Ç–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏${NC}"
    else
        echo -e "${YELLOW}‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ${NC}"
    fi
}

function open_ui() {
    echo -e "${GREEN}üåê –û—Ç–∫—Ä—ã—Ç–∏–µ n8n UI...${NC}"
    open $N8N_URL || xdg-open $N8N_URL || echo "–û—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ: $N8N_URL"
}

function import_workflows() {
    echo -e "${YELLOW}üì• –ò–º–ø–æ—Ä—Ç workflow —à–∞–±–ª–æ–Ω–æ–≤${NC}"
    echo -e "${YELLOW}1. –û—Ç–∫—Ä–æ–π—Ç–µ n8n UI: ${N8N_URL}${NC}"
    echo -e "${YELLOW}2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ Workflows ‚Üí Import${NC}"
    echo -e "${YELLOW}3. –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª—ã –∏–∑ n8n-workflows/templates/${NC}"
    echo ""
    echo -e "${GREEN}–î–æ—Å—Ç—É–ø–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã:${NC}"
    ls -la n8n-workflows/templates/*.json 2>/dev/null || echo "–®–∞–±–ª–æ–Ω—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
}

function help() {
    print_header
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./n8n-control.sh [–∫–æ–º–∞–Ω–¥–∞]"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  start    - –ó–∞–ø—É—Å—Ç–∏—Ç—å n8n"
    echo "  stop     - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å n8n"
    echo "  restart  - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å n8n"
    echo "  status   - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å"
    echo "  logs     - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
    echo "  backup   - –°–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø"
    echo "  reset    - –°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ"
    echo "  open     - –û—Ç–∫—Ä—ã—Ç—å UI –≤ –±—Ä–∞—É–∑–µ—Ä–µ"
    echo "  import   - –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏–º–ø–æ—Ä—Ç—É workflow"
    echo "  help     - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  ./n8n-control.sh start"
    echo "  ./n8n-control.sh status"
    echo "  ./n8n-control.sh logs"
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
print_header

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart)
        restart
        ;;
    status)
        status
        ;;
    logs)
        logs
        ;;
    backup)
        backup
        ;;
    reset)
        reset
        ;;
    open)
        open_ui
        ;;
    import)
        import_workflows
        ;;
    help|"")
        help
        ;;
    *)
        echo -e "${RED}‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $1${NC}"
        help
        exit 1
        ;;
esac